{"ast":null,"code":"var _jsxFileName = \"/home/mrloop/Code/react/testing2/src/controllers/City/CityList.js\";\nimport React, { useState } from 'react';\nimport CityItem from './CityItem';\nimport StationList from '../Station/stationList';\nconst CityList = props => {\n  // props.cities is an array of city names and ids\n  let [activate, toggleActivate] = useState(false);\n\n  // const allCityStations = {\n  //     Vice: [\n  //         {id: 121, name: \"A\"},\n  //         {id: 122, name: \"B\"},\n  //         {id: 123, name: \"C\"}\n  //     ],\n  //     Delhi: [\n  //         {id: 221, name: \"AA\"},\n  //         {id: 222, name: \"BB\"}\n  //     ]\n  // };\n\n  let allCityStations = [];\n  let [currentCity, updateCurrentCity] = useState(\"Vice\");\n  let [currentStations, updateCurrentStations] = useState({\n    city1: \"dummy\",\n    city2: \"dummy\"\n  });\n  const getData = data => {\n    allCityStations = data.toFill;\n    console.log(allCityStations);\n  };\n  const updateCurrentCityHandler = event => {\n    //? GET DATA OF STATION LIST HERE\n\n    //! trigger disables\n    //* async code awaited in self functions\n    //* here we only have to pass the city name and we have that already in event.target.value\n\n    const currCity = event.target.value;\n    console.log(\"here first\");\n    fetch(`http://localhost:4100/ida?city=\"${currCity}\"`).then(res => {\n      console.log(\"here second\");\n      return res.json();\n    }).then(data => {\n      console.log(\"here\");\n      getData(data);\n    });\n    updateCurrentCity(old => {\n      updateCurrentStations(old => ({\n        city1: allCityStations[0],\n        city2: allCityStations[0]\n      }));\n      return currCity;\n    });\n\n    //* async code to fill both station lists\n\n    //! de-trigger disables\n\n    // console.log(curr);\n  };\n\n  async function stall() {\n    let stallTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5000;\n    await new Promise(resolve => {\n      return setTimeout(resolve, stallTime);\n    });\n    console.log('It will be printed 2-nd with delay');\n  }\n  const calculateBtnHandler = async () => {\n    console.log(\"start\");\n    console.log(\"city\", currentCity);\n    console.dir(currentStations);\n    //! enable same disables\n\n    toggleActivate(true);\n\n    //* mimcking the await of call to backend\n\n    await stall();\n    toggleActivate(false);\n    console.log('end');\n  };\n\n  // console.log(currentCity);\n  // console.log(\"here\");\n  // console.dir(currentStations);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"Here\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"cities\",\n    id: \"cityPicker\",\n    onChange: updateCurrentCityHandler,\n    disabled: activate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, props.cities.map(city => {\n    return /*#__PURE__*/React.createElement(CityItem, {\n      city: city,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 28\n      }\n    });\n  })), /*#__PURE__*/React.createElement(StationList, {\n    stations: allCityStations,\n    pickerId: 1,\n    updateCurrentStations: updateCurrentStations,\n    disabled: activate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(StationList, {\n    stations: allCityStations,\n    pickerId: 2,\n    updateCurrentStations: updateCurrentStations,\n    disabled: activate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: calculateBtnHandler,\n    disabled: activate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"Calculate\"));\n};\nexport default CityList;","map":{"version":3,"names":["React","useState","CityItem","StationList","CityList","props","activate","toggleActivate","allCityStations","currentCity","updateCurrentCity","currentStations","updateCurrentStations","city1","city2","getData","data","toFill","console","log","updateCurrentCityHandler","event","currCity","target","value","fetch","then","res","json","old","stall","stallTime","Promise","resolve","setTimeout","calculateBtnHandler","dir","cities","map","city"],"sources":["/home/mrloop/Code/react/testing2/src/controllers/City/CityList.js"],"sourcesContent":["import React, {useState} from 'react';\n\nimport CityItem from './CityItem';\nimport StationList from '../Station/stationList';\n\nconst CityList = (props) => {\n\n    // props.cities is an array of city names and ids\n    let [activate, toggleActivate] = useState(false);\n\n    // const allCityStations = {\n    //     Vice: [\n    //         {id: 121, name: \"A\"},\n    //         {id: 122, name: \"B\"},\n    //         {id: 123, name: \"C\"}\n    //     ],\n    //     Delhi: [\n    //         {id: 221, name: \"AA\"},\n    //         {id: 222, name: \"BB\"}\n    //     ]\n    // };\n\n    let allCityStations = [];\n\n    let [currentCity, updateCurrentCity] = useState(\"Vice\");\n\n    let [currentStations, updateCurrentStations] = useState({\n        city1: \"dummy\",\n        city2: \"dummy\"\n    });\n\n    const getData = (data) => {\n        allCityStations = data.toFill;\n        console.log(allCityStations);\n    }\n\n    const updateCurrentCityHandler = (event) => {\n\n        //? GET DATA OF STATION LIST HERE\n\n        //! trigger disables\n        //* async code awaited in self functions\n        //* here we only have to pass the city name and we have that already in event.target.value\n\n        const currCity = event.target.value;\n\n        console.log(\"here first\");\n        fetch(`http://localhost:4100/ida?city=\"${currCity}\"`).then(\n            res => {\n                console.log(\"here second\");\n                return res.json();\n            }\n        ).then(\n            data => {\n                console.log(\"here\");\n                getData(data);\n            }\n        )\n\n        \n\n        updateCurrentCity(old => {\n            updateCurrentStations(old => ({\n                city1: allCityStations[0],\n                city2: allCityStations[0]\n            }));\n            return currCity;\n        });\n\n        //* async code to fill both station lists\n\n        //! de-trigger disables\n        \n        // console.log(curr);\n    }\n\n    async function stall(stallTime = 5000) {\n        await new Promise(resolve => {\n            \n            return setTimeout(resolve, stallTime);\n        });\n        console.log('It will be printed 2-nd with delay');\n      }\n\n    const calculateBtnHandler = async () => {\n        console.log(\"start\");\n\n        console.log(\"city\", currentCity);\n        console.dir(currentStations);\n        //! enable same disables\n\n        toggleActivate(true);\n\n        //* mimcking the await of call to backend\n\n        await stall();\n\n        toggleActivate(false);\n\n        console.log('end');\n    }\n\n    // console.log(currentCity);\n    // console.log(\"here\");\n    // console.dir(currentStations);\n\n    return (\n        <div>\n            <h1>Here</h1>\n            <select name=\"cities\" id=\"cityPicker\" onChange={updateCurrentCityHandler} disabled={activate}>\n            {\n                props.cities.map(city => {\n                    return <CityItem city={city} />\n                })\n            }\n            </select>\n\n            <StationList stations={allCityStations} pickerId={1} updateCurrentStations={updateCurrentStations} disabled={activate} />\n            <StationList stations={allCityStations} pickerId={2} updateCurrentStations={updateCurrentStations} disabled={activate} />\n\n\n            <button type=\"submit\" onClick={calculateBtnHandler} disabled={activate}>Calculate</button>\n        </div>\n    )\n}\n\nexport default CityList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}