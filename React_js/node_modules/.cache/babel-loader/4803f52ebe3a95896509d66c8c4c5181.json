{"ast":null,"code":"import _slicedToArray from\"/home/mrloop/github/metro-path-mongo (copy)/ReactJS/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import CalcBtn from\"../CalculateBtn/CalcBtn\";import StationItem from\"./stationItem\";import\"./stationList.css\";var StationList=function StationList(props){var _useState=useState([props.stations[0],props.stations[0]]),_useState2=_slicedToArray(_useState,2),stations=_useState2[0],updateStations=_useState2[1];// console.log(\"stations, \", props.stations);\nconsole.log(stations);// let station1 = props.stations[0], station2 = props.stations[0];\nvar stationChangeHandler=function stationChangeHandler(event){console.log(stations);var newStation=event.target.value;if(event.target.id===\"stationPicker-1\"){updateStations(function(oldStations){return[newStation,oldStations[1]];});}else if(event.target.id===\"stationPicker-2\"){updateStations(function(oldStations){return[oldStations[0],newStation];});}event.target.value=newStation;};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{class:\"row\"},/*#__PURE__*/React.createElement(\"div\",{class:\"col\"},/*#__PURE__*/React.createElement(\"div\",{class:\"conn1\"},/*#__PURE__*/React.createElement(\"select\",{name:\"stations\",class:\"st\",id:\"stationPicker-1\",onChange:stationChangeHandler,disabled:props.disabled},props.stations.map(function(station){return/*#__PURE__*/React.createElement(StationItem,{station:station});})),/*#__PURE__*/React.createElement(\"div\",{class:\"st-info-text-wrap\"},/*#__PURE__*/React.createElement(\"text\",{class:\"st-info-text\"},\"Origin: \",stations[0])))),/*#__PURE__*/React.createElement(\"div\",{class:\"col\"},/*#__PURE__*/React.createElement(\"div\",{class:\"conn2\"},/*#__PURE__*/React.createElement(\"select\",{name:\"stations\",class:\"st\",id:\"stationPicker-2\",onChange:stationChangeHandler,disabled:props.disabled},props.stations.map(function(station){return/*#__PURE__*/React.createElement(StationItem,{station:station});})),/*#__PURE__*/React.createElement(\"div\",{class:\"st-info-text-wrap\"},/*#__PURE__*/React.createElement(\"text\",{class:\"st-info-text\"},\"Destination: \",stations[1]))))),/*#__PURE__*/React.createElement(\"div\",{class:\"row\"},/*#__PURE__*/React.createElement(CalcBtn,{city:props.city,stations:stations,disabled:props.disabled,tgl:props.tgl})));};export default StationList;","map":{"version":3,"names":["React","useState","CalcBtn","StationItem","StationList","props","stations","updateStations","console","log","stationChangeHandler","event","newStation","target","value","id","oldStations","disabled","map","station","city","tgl"],"sources":["/home/mrloop/github/metro-path-mongo (copy)/ReactJS/src/controllers/Station/stationList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport CalcBtn from \"../CalculateBtn/CalcBtn\";\n\nimport StationItem from \"./stationItem\";\n\nimport \"./stationList.css\";\n\nconst StationList = (props) => {\n    const [stations, updateStations] = useState([\n        props.stations[0],\n        props.stations[0],\n    ]);\n\n    // console.log(\"stations, \", props.stations);\n    console.log(stations);\n    // let station1 = props.stations[0], station2 = props.stations[0];\n\n    const stationChangeHandler = (event) => {\n        console.log(stations);\n        const newStation = event.target.value;\n        if (event.target.id === \"stationPicker-1\") {\n            updateStations((oldStations) => [newStation, oldStations[1]]);\n        } else if (event.target.id === \"stationPicker-2\") {\n            updateStations((oldStations) => [oldStations[0], newStation]);\n        }\n        event.target.value = newStation;\n    };\n\n    return (\n        <React.Fragment>\n            <div class=\"row\">\n                <div class=\"col\">\n                    <div class=\"conn1\">\n                    <select\n                        name=\"stations\"\n                        class=\"st\"\n                        id=\"stationPicker-1\"\n                        onChange={stationChangeHandler}\n                        disabled={props.disabled}\n                    >\n                        {props.stations.map((station) => {\n                            return <StationItem station={station} />;\n                        })}\n                    </select>\n                    <div class=\"st-info-text-wrap\">\n                        <text class=\"st-info-text\">\n                            Origin: {stations[0]}\n                        </text>\n                    </div>\n                    </div>\n                </div>\n                <div class=\"col\">\n                    <div class=\"conn2\">\n                    <select\n                        name=\"stations\"\n                        class=\"st\"\n                        id=\"stationPicker-2\"\n                        onChange={stationChangeHandler}\n                        disabled={props.disabled}\n                    >\n                        {props.stations.map((station) => {\n                            return <StationItem station={station} />;\n                        })}\n                    </select>\n                    <div class=\"st-info-text-wrap\">\n                        <text class=\"st-info-text\">\n                            Destination: {stations[1]}\n                        </text>\n                    </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <CalcBtn\n                    city={props.city}\n                    stations={stations}\n                    disabled={props.disabled}\n                    tgl={props.tgl}\n                />\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default StationList;\n"],"mappings":"0KAAA,MAAOA,MAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAOC,QAAO,KAAM,yBAAyB,CAE7C,MAAOC,YAAW,KAAM,eAAe,CAEvC,MAAO,mBAAmB,CAE1B,GAAMC,YAAW,CAAG,QAAdA,YAAW,CAAIC,KAAK,CAAK,CAC3B,cAAmCJ,QAAQ,CAAC,CACxCI,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC,CACjBD,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC,CACpB,CAAC,wCAHKA,QAAQ,eAAEC,cAAc,eAK/B;AACAC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC,CACrB;AAEA,GAAMI,qBAAoB,CAAG,QAAvBA,qBAAoB,CAAIC,KAAK,CAAK,CACpCH,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC,CACrB,GAAMM,WAAU,CAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CACrC,GAAIH,KAAK,CAACE,MAAM,CAACE,EAAE,GAAK,iBAAiB,CAAE,CACvCR,cAAc,CAAC,SAACS,WAAW,QAAK,CAACJ,UAAU,CAAEI,WAAW,CAAC,CAAC,CAAC,CAAC,GAAC,CACjE,CAAC,IAAM,IAAIL,KAAK,CAACE,MAAM,CAACE,EAAE,GAAK,iBAAiB,CAAE,CAC9CR,cAAc,CAAC,SAACS,WAAW,QAAK,CAACA,WAAW,CAAC,CAAC,CAAC,CAAEJ,UAAU,CAAC,GAAC,CACjE,CACAD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAGF,UAAU,CACnC,CAAC,CAED,mBACI,oBAAC,KAAK,CAAC,QAAQ,mBACX,2BAAK,KAAK,CAAC,KAAK,eACZ,2BAAK,KAAK,CAAC,KAAK,eACZ,2BAAK,KAAK,CAAC,OAAO,eAClB,8BACI,IAAI,CAAC,UAAU,CACf,KAAK,CAAC,IAAI,CACV,EAAE,CAAC,iBAAiB,CACpB,QAAQ,CAAEF,oBAAqB,CAC/B,QAAQ,CAAEL,KAAK,CAACY,QAAS,EAExBZ,KAAK,CAACC,QAAQ,CAACY,GAAG,CAAC,SAACC,OAAO,CAAK,CAC7B,mBAAO,oBAAC,WAAW,EAAC,OAAO,CAAEA,OAAQ,EAAG,CAC5C,CAAC,CAAC,CACG,cACT,2BAAK,KAAK,CAAC,mBAAmB,eAC1B,4BAAM,KAAK,CAAC,cAAc,aACbb,QAAQ,CAAC,CAAC,CAAC,CACjB,CACL,CACA,CACJ,cACN,2BAAK,KAAK,CAAC,KAAK,eACZ,2BAAK,KAAK,CAAC,OAAO,eAClB,8BACI,IAAI,CAAC,UAAU,CACf,KAAK,CAAC,IAAI,CACV,EAAE,CAAC,iBAAiB,CACpB,QAAQ,CAAEI,oBAAqB,CAC/B,QAAQ,CAAEL,KAAK,CAACY,QAAS,EAExBZ,KAAK,CAACC,QAAQ,CAACY,GAAG,CAAC,SAACC,OAAO,CAAK,CAC7B,mBAAO,oBAAC,WAAW,EAAC,OAAO,CAAEA,OAAQ,EAAG,CAC5C,CAAC,CAAC,CACG,cACT,2BAAK,KAAK,CAAC,mBAAmB,eAC1B,4BAAM,KAAK,CAAC,cAAc,kBACRb,QAAQ,CAAC,CAAC,CAAC,CACtB,CACL,CACA,CACJ,CACJ,cACN,2BAAK,KAAK,CAAC,KAAK,eACZ,oBAAC,OAAO,EACJ,IAAI,CAAED,KAAK,CAACe,IAAK,CACjB,QAAQ,CAAEd,QAAS,CACnB,QAAQ,CAAED,KAAK,CAACY,QAAS,CACzB,GAAG,CAAEZ,KAAK,CAACgB,GAAI,EACjB,CACA,CACO,CAEzB,CAAC,CAED,cAAejB,YAAW"},"metadata":{},"sourceType":"module"}