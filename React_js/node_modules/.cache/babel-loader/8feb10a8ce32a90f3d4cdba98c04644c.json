{"ast":null,"code":"var _jsxFileName = \"/home/mrloop/Code/react/testing2/src/controllers/City/CityList.js\";\nimport React, { useState } from 'react';\nimport CityItem from './CityItem';\nimport StationList from '../Station/stationList';\nconst CityList = props => {\n  let [activate, toggleActivate] = useState(false);\n  let [currentCity, updateCurrentCity] = useState(\"Vice\");\n  // let [currentStations, updateCurrentStations] = useState();\n\n  let station1, station2;\n  let allStations = [];\n  const updateCurrentCityHandler = async event => {\n    //? GET DATA OF STATION LIST HERE\n\n    //! trigger disables\n    //* async code awaited in self functions\n    //* here we only have to pass the city name and we have that already in event.target.value\n\n    const currCity = event.target.value;\n    toggleActivate(true);\n    await fetch(`http://localhost:4100/ida?city=${currCity}`).then(res => {\n      return res.json();\n    }).then(data => {\n      console.log(\"marker 2\");\n      allStations = data.toFill;\n    });\n    station1 = allStations[0];\n    station2 = allStations[0];\n    updateCurrentCity(old => {\n      // console.log(\"marker 1\");\n\n      console.log(\"marker 4\");\n      return currCity;\n    });\n    console.log(\"marker \");\n    console.log(allStations);\n    // console.log(currentStations);\n    console.log(station1, station2);\n    toggleActivate(false);\n\n    //* async code to fill both station lists\n\n    //! de-trigger disables\n\n    // console.log(curr);\n  };\n\n  async function stall() {\n    let stallTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5000;\n    await new Promise(resolve => {\n      return setTimeout(resolve, stallTime);\n    });\n    console.log('It will be printed 2-nd with delay');\n  }\n  const calculateBtnHandler = async () => {\n    console.log(\"start\");\n    console.log(\"city\", currentCity);\n    console.dir(currentStations);\n    //! enable same disables\n\n    toggleActivate(true);\n\n    //* mimcking the await of call to backend\n\n    await stall();\n    toggleActivate(false);\n    console.log('end');\n  };\n  const updateStation1 = event => {\n    station1 = event.target.value;\n  };\n  const updateStation2 = event => {\n    station2 = event.target.value;\n  };\n\n  // console.log(currentCity);\n  // console.log(\"here\");\n  // console.dir(currentStations);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Here\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"cities\",\n    id: \"cityPicker\",\n    onChange: updateCurrentCityHandler,\n    disabled: activate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, props.cities.map(city => {\n    return /*#__PURE__*/React.createElement(CityItem, {\n      city: city,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 28\n      }\n    });\n  })), /*#__PURE__*/React.createElement(StationList, {\n    stations: allStations,\n    pickerId: 1,\n    cb: updateStation1,\n    disabled: activate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(StationList, {\n    stations: allStations,\n    pickerId: 2,\n    cb: updateStation2,\n    disabled: activate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: calculateBtnHandler,\n    disabled: activate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"Calculate\"));\n};\nexport default CityList;","map":{"version":3,"names":["React","useState","CityItem","StationList","CityList","props","activate","toggleActivate","currentCity","updateCurrentCity","station1","station2","allStations","updateCurrentCityHandler","event","currCity","target","value","fetch","then","res","json","data","console","log","toFill","old","stall","stallTime","Promise","resolve","setTimeout","calculateBtnHandler","dir","currentStations","updateStation1","updateStation2","cities","map","city"],"sources":["/home/mrloop/Code/react/testing2/src/controllers/City/CityList.js"],"sourcesContent":["import React, {useState} from 'react';\n\nimport CityItem from './CityItem';\nimport StationList from '../Station/stationList';\n\nconst CityList = (props) => {\n\n    let [activate, toggleActivate] = useState(false);\n    let [currentCity, updateCurrentCity] = useState(\"Vice\");\n    // let [currentStations, updateCurrentStations] = useState();\n\n    let station1, station2;\n\n    let allStations = [];\n\n    const updateCurrentCityHandler = async (event) => {\n\n        //? GET DATA OF STATION LIST HERE\n\n        //! trigger disables\n        //* async code awaited in self functions\n        //* here we only have to pass the city name and we have that already in event.target.value\n\n        const currCity = event.target.value;\n        toggleActivate(true);\n\n        \n\n        await fetch(`http://localhost:4100/ida?city=${currCity}`).then(\n            res => {\n                    return res.json();\n                }\n            ).then(\n                data => {\n                    console.log(\"marker 2\");\n                    allStations = data.toFill;\n                }\n            )\n\n            station1 = allStations[0];\n            station2 = allStations[0];\n\n            updateCurrentCity(old => {\n                // console.log(\"marker 1\");\n                \n                console.log(\"marker 4\");\n                return currCity;\n            })\n\n\n        console.log(\"marker \");\n        console.log(allStations);\n        // console.log(currentStations);\n        console.log(station1, station2);\n\n        \n        toggleActivate(false);\n\n        //* async code to fill both station lists\n\n        //! de-trigger disables\n        \n        // console.log(curr);\n    }\n\n    async function stall(stallTime = 5000) {\n        await new Promise(resolve => {\n            \n            return setTimeout(resolve, stallTime);\n        });\n        console.log('It will be printed 2-nd with delay');\n      }\n\n    const calculateBtnHandler = async () => {\n        console.log(\"start\");\n\n        console.log(\"city\", currentCity);\n        console.dir(currentStations);\n        //! enable same disables\n\n        toggleActivate(true);\n\n        //* mimcking the await of call to backend\n\n        await stall();\n\n        toggleActivate(false);\n\n        console.log('end');\n    }\n\n    const updateStation1 = (event) => {\n        station1 = event.target.value;\n    }\n\n    const updateStation2 = (event) => {\n        station2 = event.target.value;\n    }\n\n    // console.log(currentCity);\n    // console.log(\"here\");\n    // console.dir(currentStations);\n\n    return (\n        <div>\n            <h1>Here</h1>\n            <select name=\"cities\" id=\"cityPicker\" onChange={updateCurrentCityHandler} disabled={activate}>\n            {\n                props.cities.map(city => {\n                    return <CityItem city={city} />\n                })\n            }\n            </select>\n\n            <StationList stations={allStations} pickerId={1} cb={updateStation1} disabled={activate} />\n            <StationList stations={allStations} pickerId={2} cb={updateStation2} disabled={activate} />\n\n\n            <button type=\"submit\" onClick={calculateBtnHandler} disabled={activate}>Calculate</button>\n        </div>\n    )\n}\n\nexport default CityList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}