{"ast":null,"code":"var _jsxFileName = \"/home/mrloop/Code/react/testing2/src/controllers/City/CityList.js\";\nimport React, { useState } from 'react';\nimport CityItem from './CityItem';\nimport StationList from '../Station/stationList';\nlet allStations = [];\nconst CityList = props => {\n  let [activate, toggleActivate] = useState(false);\n  let [currentCity, updateCurrentCity] = useState(\"newVice2\");\n  const updateCurrentCityHandler = async event => {\n    const currCity = event.target.value;\n    toggleActivate(true);\n    await fetch(`http://localhost:4100/ida?city=${currCity}`).then(res => {\n      return res.json();\n    }).then(data => {\n      console.log(\"marker 2\");\n      allStations = data.toFill;\n    });\n    updateCurrentCity(old => currCity);\n\n    // console.log(allStations);\n\n    console.log(\"marker \");\n    // console.log(allStations);\n\n    toggleActivate(false);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Here\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"cities\",\n    id: \"cityPicker\",\n    onChange: updateCurrentCityHandler,\n    disabled: activate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, props.cities.map(city => {\n    return /*#__PURE__*/React.createElement(CityItem, {\n      city: city,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 28\n      }\n    });\n  })), /*#__PURE__*/React.createElement(StationList, {\n    city: currentCity,\n    stations: allStations,\n    disabled: activate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }));\n};\nexport default CityList;","map":{"version":3,"names":["React","useState","CityItem","StationList","allStations","CityList","props","activate","toggleActivate","currentCity","updateCurrentCity","updateCurrentCityHandler","event","currCity","target","value","fetch","then","res","json","data","console","log","toFill","old","cities","map","city"],"sources":["/home/mrloop/Code/react/testing2/src/controllers/City/CityList.js"],"sourcesContent":["import React, {useState} from 'react';\n\nimport CityItem from './CityItem';\nimport StationList from '../Station/stationList';\n\nlet allStations = [];\n\nconst CityList = (props) => {\n\n    let [activate, toggleActivate] = useState(false);\n    let [currentCity, updateCurrentCity] = useState(\"newVice2\");\n    \n\n    const updateCurrentCityHandler = async (event) => {\n\n        const currCity = event.target.value;\n        toggleActivate(true);\n\n        await fetch(`http://localhost:4100/ida?city=${currCity}`)\n        .then(\n            res => {\n                return res.json();\n            })\n        .then(\n            data => {\n                console.log(\"marker 2\");\n                allStations = data.toFill;\n            })\n\n        updateCurrentCity(old => currCity);\n\n        // console.log(allStations);\n\n        console.log(\"marker \");\n        // console.log(allStations);\n\n        toggleActivate(false);\n    }\n\n    return (\n        <div>\n            <h1>Here</h1>\n            <select name=\"cities\" id=\"cityPicker\" onChange={updateCurrentCityHandler} disabled={activate}>\n            {\n                props.cities.map(city => {\n                    return <CityItem city={city} />\n                })\n            }\n            </select>\n\n            <StationList city={currentCity} stations={allStations} disabled={activate} />\n            {/* <StationList city={currentCity} stations={allStations} pickerId={2} disabled={activate} /> */}\n\n        </div>\n    )\n}\n\nexport default CityList;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAErC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,WAAW,MAAM,wBAAwB;AAEhD,IAAIC,WAAW,GAAG,EAAE;AAEpB,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAExB,IAAI,CAACC,QAAQ,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAChD,IAAI,CAACQ,WAAW,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,UAAU,CAAC;EAG3D,MAAMU,wBAAwB,GAAG,MAAOC,KAAK,IAAK;IAE9C,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACnCP,cAAc,CAAC,IAAI,CAAC;IAEpB,MAAMQ,KAAK,CAAE,kCAAiCH,QAAS,EAAC,CAAC,CACxDI,IAAI,CACDC,GAAG,IAAI;MACH,OAAOA,GAAG,CAACC,IAAI,EAAE;IACrB,CAAC,CAAC,CACLF,IAAI,CACDG,IAAI,IAAI;MACJC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACvBlB,WAAW,GAAGgB,IAAI,CAACG,MAAM;IAC7B,CAAC,CAAC;IAENb,iBAAiB,CAACc,GAAG,IAAIX,QAAQ,CAAC;;IAElC;;IAEAQ,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtB;;IAEAd,cAAc,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,UAAa,eACb;IAAQ,IAAI,EAAC,QAAQ;IAAC,EAAE,EAAC,YAAY;IAAC,QAAQ,EAAEG,wBAAyB;IAAC,QAAQ,EAAEJ,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEzFD,KAAK,CAACmB,MAAM,CAACC,GAAG,CAACC,IAAI,IAAI;IACrB,oBAAO,oBAAC,QAAQ;MAAC,IAAI,EAAEA,IAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG;EACnC,CAAC,CAAC,CAEG,eAET,oBAAC,WAAW;IAAC,IAAI,EAAElB,WAAY;IAAC,QAAQ,EAAEL,WAAY;IAAC,QAAQ,EAAEG,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAG3E;AAEd,CAAC;AAED,eAAeF,QAAQ"},"metadata":{},"sourceType":"module"}