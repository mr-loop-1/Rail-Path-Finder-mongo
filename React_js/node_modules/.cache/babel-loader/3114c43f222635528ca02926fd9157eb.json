{"ast":null,"code":"var _jsxFileName = \"/home/mrloop/Code/react/testing2/src/controllers/Station/stationList.js\";\nimport React, { useState } from 'react';\nimport StationItem from './stationItem';\nconst StationList = props => {\n  const updateCurrentStationHandler = event => {\n    const curr = event.target.value;\n    props.updateCurrentStations(currStations => {\n      if (props.pickerId == 2) return {\n        city1: currStations.city1,\n        city2: curr\n      };else return {\n        city1: curr,\n        city2: currStations.city2\n      };\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"stations\",\n    id: \"stationPicker-{props.pickerId}\",\n    onChange: updateCurrentStationHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, props.stations.map(station => {\n    return /*#__PURE__*/React.createElement(StationItem, {\n      station: station,\n      pickerId: props.pickerId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 28\n      }\n    });\n  })));\n};\nexport default StationList;","map":{"version":3,"names":["React","useState","StationItem","StationList","props","updateCurrentStationHandler","event","curr","target","value","updateCurrentStations","currStations","pickerId","city1","city2","stations","map","station"],"sources":["/home/mrloop/Code/react/testing2/src/controllers/Station/stationList.js"],"sourcesContent":["import React, {useState} from 'react';\n\nimport StationItem from './stationItem';\n\nconst StationList = (props) => {\n\n    const updateCurrentStationHandler = (event) => {\n        const curr = event.target.value;\n        props.updateCurrentStations(currStations => {\n            if(props.pickerId == 2) return {\n                city1: currStations.city1,\n                city2: curr \n            }\n            else return {\n                city1: curr,\n                city2: currStations.city2\n            }\n        })\n    }\n\n    return (\n        <div>\n            <select name=\"stations\" id=\"stationPicker-{props.pickerId}\" onChange={updateCurrentStationHandler}>\n            {\n                props.stations.map(station => {\n                    return <StationItem station={station} pickerId={props.pickerId} />\n                })\n            }\n            </select>\n        </div>\n    )\n}\n\nexport default StationList;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAErC,OAAOC,WAAW,MAAM,eAAe;AAEvC,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAE3B,MAAMC,2BAA2B,GAAIC,KAAK,IAAK;IAC3C,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IAC/BL,KAAK,CAACM,qBAAqB,CAACC,YAAY,IAAI;MACxC,IAAGP,KAAK,CAACQ,QAAQ,IAAI,CAAC,EAAE,OAAO;QAC3BC,KAAK,EAAEF,YAAY,CAACE,KAAK;QACzBC,KAAK,EAAEP;MACX,CAAC,MACI,OAAO;QACRM,KAAK,EAAEN,IAAI;QACXO,KAAK,EAAEH,YAAY,CAACG;MACxB,CAAC;IACL,CAAC,CAAC;EACN,CAAC;EAED,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAQ,IAAI,EAAC,UAAU;IAAC,EAAE,EAAC,gCAAgC;IAAC,QAAQ,EAAET,2BAA4B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAE9FD,KAAK,CAACW,QAAQ,CAACC,GAAG,CAACC,OAAO,IAAI;IAC1B,oBAAO,oBAAC,WAAW;MAAC,OAAO,EAAEA,OAAQ;MAAC,QAAQ,EAAEb,KAAK,CAACQ,QAAS;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG;EACtE,CAAC,CAAC,CAEG,CACP;AAEd,CAAC;AAED,eAAeT,WAAW"},"metadata":{},"sourceType":"module"}