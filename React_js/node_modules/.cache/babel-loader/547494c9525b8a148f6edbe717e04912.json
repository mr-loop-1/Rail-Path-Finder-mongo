{"ast":null,"code":"var _jsxFileName = \"/home/mrloop/Code/react/testing2/src/controllers/City/CityList.js\";\nimport React, { useState } from 'react';\nimport CityItem from './CityItem';\nimport StationList from '../Station/stationList';\nimport CalcBtn from '../CalculateBtn/CalcBtn';\nconst CityList = props => {\n  let [activate, toggleActivate] = useState(false);\n\n  // let currentCity = \"newVice2\";\n\n  let [currentCity, updateCurrentCity] = useState(\"newVice2\");\n  // let [currentStations, updateStations] = useState();\n  // let station1, station2;\n\n  let allStations = [];\n  const updateCurrentCityHandler = async event => {\n    const currCity = event.target.value;\n    toggleActivate(true);\n    await fetch(`http://localhost:4100/ida?city=${currCity}`).then(res => {\n      return res.json();\n    }).then(data => {\n      console.log(\"marker 2\");\n      allStations = data.toFill;\n    });\n    updateCurrentCity(old => currCity);\n    console.log(\"marker \");\n    console.log(allStations);\n    toggleActivate(false);\n  };\n  async function stall() {\n    let stallTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5000;\n    await new Promise(resolve => {\n      return setTimeout(resolve, stallTime);\n    });\n    console.log('It will be printed 2-nd with delay');\n  }\n  const calculateBtnHandler = async () => {\n    console.log(\"start\");\n    console.log(\"city\", currentCity);\n    // console.dir(currentStations);\n    //! enable same disables\n\n    toggleActivate(true);\n\n    //* mimcking the await of call to backend\n\n    await stall();\n    toggleActivate(false);\n    console.log('end');\n  };\n  const updateStationss = () => {};\n\n  // console.log(currentCity);\n  // console.log(\"here\");\n  // console.dir(currentStations);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Here\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"cities\",\n    id: \"cityPicker\",\n    onChange: updateCurrentCityHandler,\n    disabled: activate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, props.cities.map(city => {\n    return /*#__PURE__*/React.createElement(CityItem, {\n      city: city,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 28\n      }\n    });\n  })), /*#__PURE__*/React.createElement(StationList, {\n    city: currentCity,\n    stations: allStations,\n    pickerId: 1,\n    disabled: activate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(StationList, {\n    city: currentCity,\n    stations: allStations,\n    pickerId: 2,\n    disabled: activate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }));\n};\nexport default CityList;","map":{"version":3,"names":["React","useState","CityItem","StationList","CalcBtn","CityList","props","activate","toggleActivate","currentCity","updateCurrentCity","allStations","updateCurrentCityHandler","event","currCity","target","value","fetch","then","res","json","data","console","log","toFill","old","stall","stallTime","Promise","resolve","setTimeout","calculateBtnHandler","updateStationss","cities","map","city"],"sources":["/home/mrloop/Code/react/testing2/src/controllers/City/CityList.js"],"sourcesContent":["import React, {useState} from 'react';\n\nimport CityItem from './CityItem';\nimport StationList from '../Station/stationList';\nimport CalcBtn from '../CalculateBtn/CalcBtn';\n\nconst CityList = (props) => {\n\n    let [activate, toggleActivate] = useState(false);\n\n    // let currentCity = \"newVice2\";\n\n    let [currentCity, updateCurrentCity] = useState(\"newVice2\");\n    // let [currentStations, updateStations] = useState();\n    // let station1, station2;\n\n    let allStations = [];\n\n    const updateCurrentCityHandler = async (event) => {\n\n        const currCity = event.target.value;\n        toggleActivate(true);\n\n        await fetch(`http://localhost:4100/ida?city=${currCity}`)\n        .then(\n            res => {\n                return res.json();\n            })\n        .then(\n            data => {\n                console.log(\"marker 2\");\n                allStations = data.toFill;\n            })\n\n        updateCurrentCity(old => currCity);\n\n\n        console.log(\"marker \");\n        console.log(allStations);\n\n\n        toggleActivate(false);\n    }\n\n\n\n\n\n\n    async function stall(stallTime = 5000) {\n        await new Promise(resolve => {\n            \n            return setTimeout(resolve, stallTime);\n        });\n        console.log('It will be printed 2-nd with delay');\n      }\n\n    const calculateBtnHandler = async () => {\n        console.log(\"start\");\n\n        console.log(\"city\", currentCity);\n        // console.dir(currentStations);\n        //! enable same disables\n\n        toggleActivate(true);\n\n        //* mimcking the await of call to backend\n\n        await stall();\n\n        toggleActivate(false);\n\n        console.log('end');\n    }\n\n    const updateStationss = () => {\n\n    }\n\n    // console.log(currentCity);\n    // console.log(\"here\");\n    // console.dir(currentStations);\n\n    return (\n        <div>\n            <h1>Here</h1>\n            <select name=\"cities\" id=\"cityPicker\" onChange={updateCurrentCityHandler} disabled={activate}>\n            {\n                props.cities.map(city => {\n                    return <CityItem city={city} />\n                })\n            }\n            </select>\n\n            <StationList city={currentCity} stations={allStations} pickerId={1} disabled={activate} />\n            <StationList city={currentCity} stations={allStations} pickerId={2} disabled={activate} />\n\n        </div>\n    )\n}\n\nexport default CityList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}