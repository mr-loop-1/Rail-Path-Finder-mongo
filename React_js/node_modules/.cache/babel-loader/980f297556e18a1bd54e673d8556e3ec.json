{"ast":null,"code":"var _jsxFileName = \"/home/mrloop/github/metro-path-mongo (copy)/ReactJS/src/controllers/City/CityList.js\";\nimport React, { useState } from \"react\";\nimport CityItem from \"./CityItem\";\nimport StationList from \"../Station/stationList\";\nimport Map from \"../Map/map\";\nimport \"./CityList.css\";\nconst initialCity = \"newVice2\";\nlet allStations = [];\n(async () => {\n  await fetch(`https://railpathfinder.herokuapp.com/stations?city=${initialCity}`).then(res => {\n    return res.json();\n  }).then(data => {\n    allStations = data.stationsArray;\n  });\n})();\nconst CityList = props => {\n  let [activate, toggleActivate] = useState(false);\n  let [currentCity, updateCurrentCity] = useState(initialCity);\n  const updateCurrentCityHandler = async event => {\n    const currCity = event.target.value;\n    toggleActivate(true);\n    await fetch(`https://railpathfinder.herokuapp.com/stations?city=${currCity}`).then(res => {\n      return res.json();\n    }).then(data => {\n      allStations = data.stationsArray;\n    });\n    updateCurrentCity(old => currCity);\n    toggleActivate(false);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"city-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"cities\",\n    id: \"cityPicker\",\n    class: \"coll\",\n    onChange: updateCurrentCityHandler,\n    disabled: activate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, props.cities.map(city => {\n    return /*#__PURE__*/React.createElement(CityItem, {\n      city: city,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 40\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"city-info-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, \"Selected City: \", currentCity)))), /*#__PURE__*/React.createElement(StationList, {\n    key: currentCity,\n    city: currentCity,\n    stations: allStations,\n    disabled: activate,\n    tgl: toggleActivate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Map, {\n    city: currentCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }));\n};\nexport default CityList;","map":{"version":3,"names":["React","useState","CityItem","StationList","Map","initialCity","allStations","fetch","then","res","json","data","stationsArray","CityList","props","activate","toggleActivate","currentCity","updateCurrentCity","updateCurrentCityHandler","event","currCity","target","value","old","cities","map","city"],"sources":["/home/mrloop/github/metro-path-mongo (copy)/ReactJS/src/controllers/City/CityList.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport CityItem from \"./CityItem\";\nimport StationList from \"../Station/stationList\";\nimport Map from \"../Map/map\";\n\nimport \"./CityList.css\";\n\nconst initialCity = \"newVice2\";\n\nlet allStations = [];\n\n(async () => {\n    await fetch(`https://railpathfinder.herokuapp.com/stations?city=${initialCity}`)\n        .then((res) => {\n            return res.json();\n        })\n        .then((data) => {\n            allStations = data.stationsArray;\n        });\n})();\n\nconst CityList = (props) => {\n    let [activate, toggleActivate] = useState(false);\n    let [currentCity, updateCurrentCity] = useState(initialCity);\n\n    const updateCurrentCityHandler = async (event) => {\n        const currCity = event.target.value;\n        toggleActivate(true);\n\n        await fetch(`https://railpathfinder.herokuapp.com/stations?city=${currCity}`)\n            .then((res) => {\n                return res.json();\n            })\n            .then((data) => {\n                allStations = data.stationsArray;\n            });\n\n        updateCurrentCity((old) => currCity);\n\n        toggleActivate(false);\n    };\n\n    return (\n        <div class=\"col-8\">\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <div class=\"city-info\">\n                        <select\n                            name=\"cities\"\n                            id=\"cityPicker\"\n                            class=\"coll\"\n                            onChange={updateCurrentCityHandler}\n                            disabled={activate}\n                        >\n                            {props.cities.map((city) => {\n                                return <CityItem city={city} />;\n                            })}\n                        </select>\n                        <p class=\"city-info-text\">\n                            Selected City: {currentCity}\n                        </p>\n                        </div>\n                    </div>\n                </div>\n\n                <StationList\n                    key={currentCity}\n                    city={currentCity}\n                    stations={allStations}\n                    disabled={activate}\n                    tgl={toggleActivate}\n                />\n            </div>\n\n            <Map city={currentCity} />\n        </div>\n    );\n};\n\nexport default CityList;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,GAAG,MAAM,YAAY;AAE5B,OAAO,gBAAgB;AAEvB,MAAMC,WAAW,GAAG,UAAU;AAE9B,IAAIC,WAAW,GAAG,EAAE;AAEpB,CAAC,YAAY;EACT,MAAMC,KAAK,CAAE,sDAAqDF,WAAY,EAAC,CAAC,CAC3EG,IAAI,CAAEC,GAAG,IAAK;IACX,OAAOA,GAAG,CAACC,IAAI,EAAE;EACrB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;IACZL,WAAW,GAAGK,IAAI,CAACC,aAAa;EACpC,CAAC,CAAC;AACV,CAAC,GAAG;AAEJ,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EACxB,IAAI,CAACC,QAAQ,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAChD,IAAI,CAACgB,WAAW,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAACI,WAAW,CAAC;EAE5D,MAAMc,wBAAwB,GAAG,MAAOC,KAAK,IAAK;IAC9C,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACnCP,cAAc,CAAC,IAAI,CAAC;IAEpB,MAAMT,KAAK,CAAE,sDAAqDc,QAAS,EAAC,CAAC,CACxEb,IAAI,CAAEC,GAAG,IAAK;MACX,OAAOA,GAAG,CAACC,IAAI,EAAE;IACrB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;MACZL,WAAW,GAAGK,IAAI,CAACC,aAAa;IACpC,CAAC,CAAC;IAENM,iBAAiB,CAAEM,GAAG,IAAKH,QAAQ,CAAC;IAEpCL,cAAc,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,oBACI;IAAK,KAAK,EAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACd;IAAK,KAAK,EAAC,WAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAClB;IAAK,KAAK,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACZ;IAAK,KAAK,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACZ;IAAK,KAAK,EAAC,WAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACtB;IACI,IAAI,EAAC,QAAQ;IACb,EAAE,EAAC,YAAY;IACf,KAAK,EAAC,MAAM;IACZ,QAAQ,EAAEG,wBAAyB;IACnC,QAAQ,EAAEJ,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAElBD,KAAK,CAACW,MAAM,CAACC,GAAG,CAAEC,IAAI,IAAK;IACxB,oBAAO,oBAAC,QAAQ;MAAC,IAAI,EAAEA,IAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG;EACnC,CAAC,CAAC,CACG,eACT;IAAG,KAAK,EAAC,gBAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,sBACLV,WAAW,CAC3B,CACE,CACJ,CACJ,eAEN,oBAAC,WAAW;IACR,GAAG,EAAEA,WAAY;IACjB,IAAI,EAAEA,WAAY;IAClB,QAAQ,EAAEX,WAAY;IACtB,QAAQ,EAAES,QAAS;IACnB,GAAG,EAAEC,cAAe;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACtB,CACA,eAEN,oBAAC,GAAG;IAAC,IAAI,EAAEC,WAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACxB;AAEd,CAAC;AAED,eAAeJ,QAAQ"},"metadata":{},"sourceType":"module"}