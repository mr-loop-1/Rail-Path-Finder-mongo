{"ast":null,"code":"var _jsxFileName = \"/home/mrloop/Code/react/testing2/src/controllers/City/CityList.js\";\nimport React, { useState } from 'react';\nimport CityItem from './CityItem';\nimport StationList from '../Station/stationList';\nconst CityList = props => {\n  let [activate, toggleActivate] = useState(false);\n  let [currentCity, updateCurrentCity] = useState(\"Vice\");\n  let [currentStations, updateCurrentStations] = useState();\n  let allStations = [];\n  const updateCurrentCityHandler = event => {\n    //? GET DATA OF STATION LIST HERE\n\n    //! trigger disables\n    //* async code awaited in self functions\n    //* here we only have to pass the city name and we have that already in event.target.value\n\n    const currCity = event.target.value;\n    toggleActivate(true);\n    updateCurrentCity(async old => {\n      console.log(\"marker 1\");\n      await fetch(`http://localhost:4100/ida?city=${currCity}`).then(res => {\n        // console.log(\"here second\");\n        return res.json();\n      }).then(data => {\n        console.log(\"marker 2\");\n        allStations = data.toFill;\n        return allStations;\n      }).then(data => updateCurrentStations(old => {\n        console.log(\"marker 3\");\n        return {\n          city1: data[0],\n          city2: data[0]\n        };\n      }));\n      return currCity;\n    });\n\n    // console.log(\"here first\");\n\n    // await fetch(`http://localhost:4100/ida?city=${currCity}`).then(\n    //     res => {\n    //         console.log(\"here second\");\n    //         return res.json();\n    //     }\n    // ).then(\n    //     data => {\n    //         console.log(\"here\");\n    //         updateAllCityStation(old => {\n    //             console.log(\"here \");\n    //             return data.toFill\n    //         });\n    //         console.log(allCityStations);\n    //         console.log(data.toFill);\n    //         console.log(\"here 5\");\n    //     }\n    // )\n\n    // updateCurrentStations(old => {\n    //     console.log(\"marker \");\n    //     return ({\n    //     city1: allCityStations[0],\n    //     city2: allCityStations[0]\n    // })});\n\n    // console.log(\"marker 5\");\n\n    // updateCurrentCity(old => {\n    //     console.log(\"marker 2\");\n    //     updateCurrentStations(old => ({\n    //         city1: allCityStations[0],\n    //         city2: allCityStations[0]\n    //     }));\n    //     // updateAllCityStation(old => allCityStations)\n    //     return currCity;\n    // });\n\n    console.log(\"marker \");\n    console.log(allStations);\n    toggleActivate(false);\n\n    //* async code to fill both station lists\n\n    //! de-trigger disables\n\n    // console.log(curr);\n  };\n\n  async function stall() {\n    let stallTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5000;\n    await new Promise(resolve => {\n      return setTimeout(resolve, stallTime);\n    });\n    console.log('It will be printed 2-nd with delay');\n  }\n  const calculateBtnHandler = async () => {\n    console.log(\"start\");\n    console.log(\"city\", currentCity);\n    console.dir(currentStations);\n    //! enable same disables\n\n    toggleActivate(true);\n\n    //* mimcking the await of call to backend\n\n    await stall();\n    toggleActivate(false);\n    console.log('end');\n  };\n\n  // console.log(currentCity);\n  // console.log(\"here\");\n  // console.dir(currentStations);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"Here\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"cities\",\n    id: \"cityPicker\",\n    onChange: updateCurrentCityHandler,\n    disabled: activate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, props.cities.map(city => {\n    return /*#__PURE__*/React.createElement(CityItem, {\n      city: city,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 28\n      }\n    });\n  })), /*#__PURE__*/React.createElement(StationList, {\n    stations: allStations,\n    pickerId: 1,\n    updateCurrentStations: updateCurrentStations,\n    disabled: activate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(StationList, {\n    stations: allStations,\n    pickerId: 2,\n    updateCurrentStations: updateCurrentStations,\n    disabled: activate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: calculateBtnHandler,\n    disabled: activate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, \"Calculate\"));\n};\nexport default CityList;","map":{"version":3,"names":["React","useState","CityItem","StationList","CityList","props","activate","toggleActivate","currentCity","updateCurrentCity","currentStations","updateCurrentStations","allStations","updateCurrentCityHandler","event","currCity","target","value","old","console","log","fetch","then","res","json","data","toFill","city1","city2","stall","stallTime","Promise","resolve","setTimeout","calculateBtnHandler","dir","cities","map","city"],"sources":["/home/mrloop/Code/react/testing2/src/controllers/City/CityList.js"],"sourcesContent":["import React, {useState} from 'react';\n\nimport CityItem from './CityItem';\nimport StationList from '../Station/stationList';\n\nconst CityList = (props) => {\n\n    let [activate, toggleActivate] = useState(false);\n    let [currentCity, updateCurrentCity] = useState(\"Vice\");\n    let [currentStations, updateCurrentStations] = useState();\n\n    let allStations = [];\n\n    const updateCurrentCityHandler = (event) => {\n\n        //? GET DATA OF STATION LIST HERE\n\n        //! trigger disables\n        //* async code awaited in self functions\n        //* here we only have to pass the city name and we have that already in event.target.value\n\n        const currCity = event.target.value;\n        toggleActivate(true);\n\n        updateCurrentCity(async old => {\n            console.log(\"marker 1\");\n            await fetch(`http://localhost:4100/ida?city=${currCity}`).then(\n            res => {\n                    // console.log(\"here second\");\n                    return res.json();\n                }\n            ).then(\n                data => {\n                    console.log(\"marker 2\");\n                    allStations = data.toFill;\n                    return allStations;\n                }\n            ).then(\n                data => updateCurrentStations(old => {\n                    console.log(\"marker 3\");\n                    return ({\n                        city1: data[0],\n                        city2: data[0]\n                    });\n                })\n            )\n            return currCity;\n        })\n\n        // console.log(\"here first\");\n\n        // await fetch(`http://localhost:4100/ida?city=${currCity}`).then(\n        //     res => {\n        //         console.log(\"here second\");\n        //         return res.json();\n        //     }\n        // ).then(\n        //     data => {\n        //         console.log(\"here\");\n        //         updateAllCityStation(old => {\n        //             console.log(\"here \");\n        //             return data.toFill\n        //         });\n        //         console.log(allCityStations);\n        //         console.log(data.toFill);\n        //         console.log(\"here 5\");\n        //     }\n        // )\n\n        // updateCurrentStations(old => {\n        //     console.log(\"marker \");\n        //     return ({\n        //     city1: allCityStations[0],\n        //     city2: allCityStations[0]\n        // })});\n\n        // console.log(\"marker 5\");\n\n        // updateCurrentCity(old => {\n        //     console.log(\"marker 2\");\n        //     updateCurrentStations(old => ({\n        //         city1: allCityStations[0],\n        //         city2: allCityStations[0]\n        //     }));\n        //     // updateAllCityStation(old => allCityStations)\n        //     return currCity;\n        // });\n\n        console.log(\"marker \");\n        console.log(allStations);\n        toggleActivate(false);\n\n        //* async code to fill both station lists\n\n        //! de-trigger disables\n        \n        // console.log(curr);\n    }\n\n    async function stall(stallTime = 5000) {\n        await new Promise(resolve => {\n            \n            return setTimeout(resolve, stallTime);\n        });\n        console.log('It will be printed 2-nd with delay');\n      }\n\n    const calculateBtnHandler = async () => {\n        console.log(\"start\");\n\n        console.log(\"city\", currentCity);\n        console.dir(currentStations);\n        //! enable same disables\n\n        toggleActivate(true);\n\n        //* mimcking the await of call to backend\n\n        await stall();\n\n        toggleActivate(false);\n\n        console.log('end');\n    }\n\n    // console.log(currentCity);\n    // console.log(\"here\");\n    // console.dir(currentStations);\n\n    return (\n        <div>\n            <h1>Here</h1>\n            <select name=\"cities\" id=\"cityPicker\" onChange={updateCurrentCityHandler} disabled={activate}>\n            {\n                props.cities.map(city => {\n                    return <CityItem city={city} />\n                })\n            }\n            </select>\n\n            <StationList stations={allStations} pickerId={1} updateCurrentStations={updateCurrentStations} disabled={activate} />\n            <StationList stations={allStations} pickerId={2} updateCurrentStations={updateCurrentStations} disabled={activate} />\n\n\n            <button type=\"submit\" onClick={calculateBtnHandler} disabled={activate}>Calculate</button>\n        </div>\n    )\n}\n\nexport default CityList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}