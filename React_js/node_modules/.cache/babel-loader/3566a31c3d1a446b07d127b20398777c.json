{"ast":null,"code":"var _jsxFileName = \"/home/mrloop/Code/react/testing2/src/controllers/City/CityList.js\";\nimport React, { useState } from 'react';\nimport CityItem from './CityItem';\nimport StationList from '../Station/stationList';\nconst CityList = props => {\n  // props.cities is an array of city names and ids\n  let [activate, toggleActivate] = useState(false);\n\n  // const allCityStations = {\n  //     Vice: [\n  //         {id: 121, name: \"A\"},\n  //         {id: 122, name: \"B\"},\n  //         {id: 123, name: \"C\"}\n  //     ],\n  //     Delhi: [\n  //         {id: 221, name: \"AA\"},\n  //         {id: 222, name: \"BB\"}\n  //     ]\n  // };\n\n  let [allCityStations, updateAllCityStation] = useState([]);\n  let [currentCity, updateCurrentCity] = useState(\"Vice\");\n  let [currentStations, updateCurrentStations] = useState({\n    city1: \"dummy\",\n    city2: \"dummy\"\n  });\n\n  // const getData = async (data) => {\n\n  //     console.log(allCityStations);\n  // }\n\n  const updateCurrentCityHandler = async event => {\n    //? GET DATA OF STATION LIST HERE\n\n    //! trigger disables\n    //* async code awaited in self functions\n    //* here we only have to pass the city name and we have that already in event.target.value\n\n    const currCity = event.target.value;\n    toggleActivate(true);\n    updateCurrentCity(async old => {\n      console.log(\"marker 1\");\n      await fetch(`http://localhost:4100/ida?city=${currCity}`).then(res => {\n        // console.log(\"here second\");\n        return res.json();\n      }).then(data => {\n        console.log(\"marker 2\");\n        updateAllCityStation(async old => {\n          console.log(\"marker 3 \");\n          function getUsers() {\n            return new Promise((resolve, reject) => {\n              resolve({\n                city1: data.toFill[0],\n                city2: data.toFill[0]\n              });\n            });\n          }\n          await getUsers().then(updateCurrentStations);\n          console.log(\"marker 6\");\n          return data.toFill;\n        });\n        console.log(\"marker 7\");\n        console.log(allCityStations);\n        console.log(data.toFill);\n      });\n      return currCity;\n    });\n\n    // console.log(\"here first\");\n\n    // await fetch(`http://localhost:4100/ida?city=${currCity}`).then(\n    //     res => {\n    //         console.log(\"here second\");\n    //         return res.json();\n    //     }\n    // ).then(\n    //     data => {\n    //         console.log(\"here\");\n    //         updateAllCityStation(old => {\n    //             console.log(\"here \");\n    //             return data.toFill\n    //         });\n    //         console.log(allCityStations);\n    //         console.log(data.toFill);\n    //         console.log(\"here 5\");\n    //     }\n    // )\n\n    // updateCurrentStations(old => {\n    //     console.log(\"marker \");\n    //     return ({\n    //     city1: allCityStations[0],\n    //     city2: allCityStations[0]\n    // })});\n\n    // console.log(\"marker 5\");\n\n    // updateCurrentCity(old => {\n    //     console.log(\"marker 2\");\n    //     updateCurrentStations(old => ({\n    //         city1: allCityStations[0],\n    //         city2: allCityStations[0]\n    //     }));\n    //     // updateAllCityStation(old => allCityStations)\n    //     return currCity;\n    // });\n\n    console.log(\"marker \");\n    // console.log(allCityStations);\n    toggleActivate(false);\n\n    //* async code to fill both station lists\n\n    //! de-trigger disables\n\n    // console.log(curr);\n  };\n\n  async function stall() {\n    let stallTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5000;\n    await new Promise(resolve => {\n      return setTimeout(resolve, stallTime);\n    });\n    console.log('It will be printed 2-nd with delay');\n  }\n  const calculateBtnHandler = async () => {\n    console.log(\"start\");\n    console.log(\"city\", currentCity);\n    console.dir(currentStations);\n    //! enable same disables\n\n    toggleActivate(true);\n\n    //* mimcking the await of call to backend\n\n    await stall();\n    toggleActivate(false);\n    console.log('end');\n  };\n\n  // console.log(currentCity);\n  // console.log(\"here\");\n  // console.dir(currentStations);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, \"Here\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"cities\",\n    id: \"cityPicker\",\n    onChange: updateCurrentCityHandler,\n    disabled: activate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, props.cities.map(city => {\n    return /*#__PURE__*/React.createElement(CityItem, {\n      city: city,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 28\n      }\n    });\n  })), /*#__PURE__*/React.createElement(StationList, {\n    stations: allCityStations,\n    pickerId: 1,\n    updateCurrentStations: updateCurrentStations,\n    disabled: activate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(StationList, {\n    stations: allCityStations,\n    pickerId: 2,\n    updateCurrentStations: updateCurrentStations,\n    disabled: activate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: calculateBtnHandler,\n    disabled: activate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, \"Calculate\"));\n};\nexport default CityList;","map":{"version":3,"names":["React","useState","CityItem","StationList","CityList","props","activate","toggleActivate","allCityStations","updateAllCityStation","currentCity","updateCurrentCity","currentStations","updateCurrentStations","city1","city2","updateCurrentCityHandler","event","currCity","target","value","old","console","log","fetch","then","res","json","data","getUsers","Promise","resolve","reject","toFill","stall","stallTime","setTimeout","calculateBtnHandler","dir","cities","map","city"],"sources":["/home/mrloop/Code/react/testing2/src/controllers/City/CityList.js"],"sourcesContent":["import React, {useState} from 'react';\n\nimport CityItem from './CityItem';\nimport StationList from '../Station/stationList';\n\nconst CityList = (props) => {\n\n    // props.cities is an array of city names and ids\n    let [activate, toggleActivate] = useState(false);\n\n    // const allCityStations = {\n    //     Vice: [\n    //         {id: 121, name: \"A\"},\n    //         {id: 122, name: \"B\"},\n    //         {id: 123, name: \"C\"}\n    //     ],\n    //     Delhi: [\n    //         {id: 221, name: \"AA\"},\n    //         {id: 222, name: \"BB\"}\n    //     ]\n    // };\n\n    let [allCityStations, updateAllCityStation] = useState([]);\n\n    let [currentCity, updateCurrentCity] = useState(\"Vice\");\n\n    let [currentStations, updateCurrentStations] = useState({\n        city1: \"dummy\",\n        city2: \"dummy\"\n    });\n\n    // const getData = async (data) => {\n        \n    //     console.log(allCityStations);\n    // }\n\n    const updateCurrentCityHandler = async (event) => {\n\n        //? GET DATA OF STATION LIST HERE\n\n        //! trigger disables\n        //* async code awaited in self functions\n        //* here we only have to pass the city name and we have that already in event.target.value\n\n        const currCity = event.target.value;\n        toggleActivate(true);\n\n        updateCurrentCity(async old => {\n            console.log(\"marker 1\");\n            await fetch(`http://localhost:4100/ida?city=${currCity}`).then(\n            res => {\n                    // console.log(\"here second\");\n                    return res.json();\n                }\n            ).then(\n                data => {\n                    console.log(\"marker 2\");\n                    updateAllCityStation(async old => {\n                        console.log(\"marker 3 \");\n\n                        function getUsers() {\n                            return new Promise((resolve, reject) => {\n                              resolve({\n                                city1: data.toFill[0],\n                                city2: data.toFill[0]\n                            })\n                            });\n                          }\n\n                        await getUsers().then(updateCurrentStations);\n                        console.log(\"marker 6\");\n\n                        return data.toFill\n                    });\n                    console.log(\"marker 7\");\n                    console.log(allCityStations);\n                    console.log(data.toFill);\n                    \n                }\n            )\n            return currCity;\n        })\n\n        // console.log(\"here first\");\n\n        // await fetch(`http://localhost:4100/ida?city=${currCity}`).then(\n        //     res => {\n        //         console.log(\"here second\");\n        //         return res.json();\n        //     }\n        // ).then(\n        //     data => {\n        //         console.log(\"here\");\n        //         updateAllCityStation(old => {\n        //             console.log(\"here \");\n        //             return data.toFill\n        //         });\n        //         console.log(allCityStations);\n        //         console.log(data.toFill);\n        //         console.log(\"here 5\");\n        //     }\n        // )\n\n        // updateCurrentStations(old => {\n        //     console.log(\"marker \");\n        //     return ({\n        //     city1: allCityStations[0],\n        //     city2: allCityStations[0]\n        // })});\n\n        // console.log(\"marker 5\");\n\n        // updateCurrentCity(old => {\n        //     console.log(\"marker 2\");\n        //     updateCurrentStations(old => ({\n        //         city1: allCityStations[0],\n        //         city2: allCityStations[0]\n        //     }));\n        //     // updateAllCityStation(old => allCityStations)\n        //     return currCity;\n        // });\n\n        console.log(\"marker \");\n        // console.log(allCityStations);\n        toggleActivate(false);\n\n        //* async code to fill both station lists\n\n        //! de-trigger disables\n        \n        // console.log(curr);\n    }\n\n    async function stall(stallTime = 5000) {\n        await new Promise(resolve => {\n            \n            return setTimeout(resolve, stallTime);\n        });\n        console.log('It will be printed 2-nd with delay');\n      }\n\n    const calculateBtnHandler = async () => {\n        console.log(\"start\");\n\n        console.log(\"city\", currentCity);\n        console.dir(currentStations);\n        //! enable same disables\n\n        toggleActivate(true);\n\n        //* mimcking the await of call to backend\n\n        await stall();\n\n        toggleActivate(false);\n\n        console.log('end');\n    }\n\n    // console.log(currentCity);\n    // console.log(\"here\");\n    // console.dir(currentStations);\n\n    return (\n        <div>\n            <h1>Here</h1>\n            <select name=\"cities\" id=\"cityPicker\" onChange={updateCurrentCityHandler} disabled={activate}>\n            {\n                props.cities.map(city => {\n                    return <CityItem city={city} />\n                })\n            }\n            </select>\n\n            <StationList stations={allCityStations} pickerId={1} updateCurrentStations={updateCurrentStations} disabled={activate} />\n            <StationList stations={allCityStations} pickerId={2} updateCurrentStations={updateCurrentStations} disabled={activate} />\n\n\n            <button type=\"submit\" onClick={calculateBtnHandler} disabled={activate}>Calculate</button>\n        </div>\n    )\n}\n\nexport default CityList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}